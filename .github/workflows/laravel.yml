name: CI & CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo, bcmath
          ini-values: post_max_size=256M, upload_max_filesize=256M
          coverage: none

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Create .env file
        run: |
          cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --env=testing

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Node.js dependencies
        run: npm install

      - name: Build assets with Vite
        run: npm run build

      - name: Run tests
        run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Verify SSH connection
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p 65002 88.223.85.92 >> ~/.ssh/known_hosts

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Node.js dependencies
        run: npm install

      - name: Build assets with Vite
        run: npm run build

      # 4. Configurar las variables de entorno
      - name: Set environment variables
        run: cp .env.example .env

      # Usa variables de entorno seguras de GitHub Secrets para la conexión a la base de datos
      - name: Update environment file
        run: |
          sed -i "s|DB_CONNECTION=mysql|DB_CONNECTION=${{ secrets.DB_CONNECTION }}|g" .env
          sed -i "s|DB_HOST=127.0.0.1|DB_HOST=${{ secrets.DB_HOST }}|g" .env
          sed -i "s|DB_PORT=3306|DB_PORT=${{ secrets.DB_PORT }}|g" .env
          sed -i "s|DB_DATABASE=laravel|DB_DATABASE=${{ secrets.DB_DATABASE }}|g" .env
          sed -i "s|DB_USERNAME=root|DB_USERNAME=${{ secrets.DB_USERNAME }}|g" .env
          sed -i "s|DB_PASSWORD=|DB_PASSWORD=${{ secrets.DB_PASSWORD }}|g" .env

      # 5. Probar la conexión a la base de datos
      - name: Validate database connection
        run: php artisan migrate:status
